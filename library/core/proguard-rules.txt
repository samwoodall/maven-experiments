# Proguard rules specific to the core module.

# Constant folding for resource integers may mean that a resource passed to this method appears to be unused. Keep the method to prevent this from happening.
-keep class app.judo.shaded.exoplayer2.upstream.RawResourceDataSource {
  public static android.net.Uri buildRawResourceUri(int);
}

## Methods accessed via reflection in DefaultExtractorsFactory
#-dontnote com.google.android.exoplayer2.ext.flac.FlacLibrary
#-keepclassmembers class com.google.android.exoplayer2.ext.flac.FlacLibrary {
#  public static boolean isAvailable();
#}

# Some members of this class are being accessed from native methods. Keep them unobfuscated.
-keep class app.judo.shaded.exoplayer2.video.VideoDecoderOutputBuffer {
  *;
}

## Constructors accessed via reflection in DefaultRenderersFactory
#-dontnote com.google.android.exoplayer2.ext.vp9.LibvpxVideoRenderer
#-keepclassmembers class com.google.android.exoplayer2.ext.vp9.LibvpxVideoRenderer {
#  <init>(long, android.os.Handler, app.judo.shaded.exoplayer2.video.VideoRendererEventListener, int);
#}
#-dontnote com.google.android.exoplayer2.ext.av1.Libgav1VideoRenderer
#-keepclassmembers class com.google.android.exoplayer2.ext.av1.Libgav1VideoRenderer {
#  <init>(long, android.os.Handler, app.judo.shaded.exoplayer2.video.VideoRendererEventListener, int);
#}
#-dontnote com.google.android.exoplayer2.ext.opus.LibopusAudioRenderer
#-keepclassmembers class com.google.android.exoplayer2.ext.opus.LibopusAudioRenderer {
#  <init>(android.os.Handler, app.judo.shaded.exoplayer2.audio.AudioRendererEventListener, app.judo.shaded.exoplayer2.audio.AudioSink);
#}
#-dontnote com.google.android.exoplayer2.ext.flac.LibflacAudioRenderer
#-keepclassmembers class com.google.android.exoplayer2.ext.flac.LibflacAudioRenderer {
#  <init>(android.os.Handler, app.judo.shaded.exoplayer2.audio.AudioRendererEventListener, app.judo.shaded.exoplayer2.audio.AudioSink);
#}
#-dontnote com.google.android.exoplayer2.ext.ffmpeg.FfmpegAudioRenderer
#-keepclassmembers class com.google.android.exoplayer2.ext.ffmpeg.FfmpegAudioRenderer {
#  <init>(android.os.Handler, app.judo.shaded.exoplayer2.audio.AudioRendererEventListener, app.judo.shaded.exoplayer2.audio.AudioSink);
#}
#
## Constructors accessed via reflection in DefaultDataSource
#-dontnote com.google.android.exoplayer2.ext.rtmp.RtmpDataSource
#-keepclassmembers class com.google.android.exoplayer2.ext.rtmp.RtmpDataSource {
#  <init>();
#}

# Constructors accessed via reflection in DefaultDownloaderFactory
-dontnote app.judo.shaded.exoplayer2.source.dash.offline.DashDownloader
-keepclassmembers class app.judo.shaded.exoplayer2.source.dash.offline.DashDownloader {
  <init>(app.judo.shaded.exoplayer2.MediaItem, app.judo.shaded.exoplayer2.upstream.cache.CacheDataSource$Factory, java.util.concurrent.Executor);
}
-dontnote app.judo.shaded.exoplayer2.source.hls.offline.HlsDownloader
-keepclassmembers class app.judo.shaded.exoplayer2.source.hls.offline.HlsDownloader {
  <init>(app.judo.shaded.exoplayer2.MediaItem, app.judo.shaded.exoplayer2.upstream.cache.CacheDataSource$Factory, java.util.concurrent.Executor);
}
-dontnote app.judo.shaded.exoplayer2.source.smoothstreaming.offline.SsDownloader
-keepclassmembers class app.judo.shaded.exoplayer2.source.smoothstreaming.offline.SsDownloader {
  <init>(app.judo.shaded.exoplayer2.MediaItem, app.judo.shaded.exoplayer2.upstream.cache.CacheDataSource$Factory, java.util.concurrent.Executor);
}

# Constructors accessed via reflection in DefaultMediaSourceFactory
-dontnote app.judo.shaded.exoplayer2.source.dash.DashMediaSource$Factory
-keepclasseswithmembers class app.judo.shaded.exoplayer2.source.dash.DashMediaSource$Factory {
  <init>(app.judo.shaded.exoplayer2.upstream.DataSource$Factory);
}
-dontnote app.judo.shaded.exoplayer2.source.hls.HlsMediaSource$Factory
-keepclasseswithmembers class app.judo.shaded.exoplayer2.source.hls.HlsMediaSource$Factory {
  <init>(app.judo.shaded.exoplayer2.upstream.DataSource$Factory);
}
-dontnote app.judo.shaded.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
-keepclasseswithmembers class app.judo.shaded.exoplayer2.source.smoothstreaming.SsMediaSource$Factory {
  <init>(app.judo.shaded.exoplayer2.upstream.DataSource$Factory);
}

# Don't warn about checkerframework and Kotlin annotations
-dontwarn org.checkerframework.**
-dontwarn kotlin.annotations.jvm.**
-dontwarn javax.annotation.**
